# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Presubmit

on:
  label:
    types:
      - created
  push:
    branches:
      - main
      - 'stable/**'
  merge_group:
  pull_request:
    branches: 
      - main
      - 'wb/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  lint-kotlin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: "temurin"
          java-version: "17"

      - uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
        with:
          arguments: ktfmtCheck ktfmtCheckBuildScripts --no-configuration-cache

  lint-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Rust lint
        run: cargo-fmt --all --check

  rust-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Build all
        run: cargo build --all-targets --all-features
      - name: Test all
        run: cargo test --all-targets --all-features

  sdk-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}    
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
        with:
          workspaces: ". -> designcompose/build/intermediates/cargoTarget"

      - name: Install Rust toolchains
        run: bash install-rust-toolchains.sh

      - name: Run local tests
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
        with:
          arguments: test

      - name: Build debug
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
        with:
          arguments: assembleDebug

      - name: Build release
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
        with:
          arguments: assembleRelease

      - name: Final check
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
        with:
          arguments: check

  build-maven-repo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f

      - name: Install Rust toolchains
        run: bash install-rust-toolchains.sh

      - name: Build Maven repo
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
        with:
          arguments: publishAllPublicationsToLocalDirRepository

      - name: Zip repo
        working-directory: build
        run: zip -q -r designcompose_m2repo.zip designcompose_m2repo/

      - name: Upload zipped repo
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: designcompose-m2-repo-zip
          path: build/designcompose_m2repo.zip
  
  tutorial-app:
    runs-on: ubuntu-latest
    needs: build-maven-repo
    steps:       
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "17"
    - uses: actions/download-artifact@v3
      with:
        name: designcompose-m2-repo-zip

    - run: unzip designcompose_m2repo.zip

    - name: "Set environment variables"
      run: |
        echo "ORG_GRADLE_PROJECT_DesignComposeMavenRepo=$GITHUB_WORKSPACE/designcompose_m2repo" >> $GITHUB_ENV

    - name: Check Tutorial App
      uses: gradle/gradle-build-action@v2
      with:
        build-root-directory: reference-apps/tutorial
        arguments: |
          --init-script ../local-design-compose-repo.init.gradle.kts
          app:dependencies
          check

  figma-resources:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0

      - name: Build Plugin
        working-directory: support-figma/extended-layout-plugin
        run: npm ci; npm run build
      
      - name: Package Plugin
        working-directory: support-figma
        run: |
          zip -r extended-layout-plugin.zip \
            extended-layout-plugin/manifest.json \
            extended-layout-plugin/ui.html \
            extended-layout-plugin/code.js

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: figma-plugin-zip
          path: support-figma/extended-layout-plugin.zip

      - name: Build Widget
        working-directory: support-figma/auto-content-preview-widget
        run: npm ci; npm run build

      - name: Package Widget
        working-directory: support-figma
        run: |
          zip -r auto-content-preview-widget.zip \
            auto-content-preview-widget/manifest.json \
            auto-content-preview-widget/ui.html \
            auto-content-preview-widget/code.js

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: figma-widget-zip
          path: support-figma/auto-content-preview-widget.zip

  mediacompose-build:
    runs-on: ubuntu-latest
    needs: build-maven-repo
    steps:       
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "17"
    - uses: actions/download-artifact@v3
      with:
        name: designcompose-m2-repo-zip

    - run: unzip designcompose_m2repo.zip

    - name: "Set environment variables"
      run: |
        echo "ORG_GRADLE_PROJECT_DesignComposeMavenRepo=$GITHUB_WORKSPACE/designcompose_m2repo" >> $GITHUB_ENV
        echo "ORG_GRADLE_PROJECT_unbundledAAOSDir=$GITHUB_WORKSPACE/undbundled-aaos" >> $GITHUB_ENV


    - name: Check out the Unbundled AAOS Repo
      run: |
        HOST=https://android.googlesource.com/platform/superproject
        BRANCH=ub-automotive-master-20230303
        mkdir "$ORG_GRADLE_PROJECT_unbundledAAOSDir"
        git clone "$HOST" "$ORG_GRADLE_PROJECT_unbundledAAOSDir" --branch="$BRANCH" \
        --single-branch --filter=blob:none --recurse-submodules --jobs=4

    - name: Check MediaCompose
      uses: gradle/gradle-build-action@v2
      with:
        build-root-directory: reference-apps/aaos-unbundled
        arguments: |
          check 
