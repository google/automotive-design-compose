# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:  # added using https://github.com/step-security/secure-repo
  contents: write

jobs:
  build-figma-resources:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v3.5.2
        with:
          submodules: 'recursive'

      - name: Set version for Widget
        working-directory: support-figma/auto-content-preview-widget
        run: |
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's_/_\\/_g')
          sed -i -e "s/\(\"name\":.*\)\",/\1 ${BRANCH_NAME}\",/" manifest.json

      - uses: ./.github/actions/build-figma-resource
        with:
            resource: auto-content-preview-widget
      - uses: ./.github/actions/build-figma-resource
        with:
            resource: extended-layout-plugin


  build-maven-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: "Set environment variables"
        run: |
          echo "ORG_GRADLE_PROJECT_DesignComposeMavenRepo=$GITHUB_WORKSPACE/designcompose_m2repo" >> "$GITHUB_ENV"

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v3.5.2
        with:
          submodules: 'recursive'
      - name: Set up Build
        uses: ./.github/actions/setup-build
        with:
          setup-gradle: true
          setup-protoc: true
          setup-rust: true

      - name: Build Maven repo
        run: ./gradlew -PdesignComposeReleaseVersion=${{ github.ref_name }} publishAllPublicationsToLocalDirRepository

      - name: Upload
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: designcompose_m2repo
          path: designcompose_m2repo

  build-rust-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v3.5.2
        with:
          submodules: 'recursive'

      - name: Set up Build
        uses: ./.github/actions/setup-build
        with:
          setup-rust: true

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binaries
        run: |
          cross build --release --target ${{ matrix.target }} --package figma_import --bin fetch --features="fetch"
          cross build --release --target ${{ matrix.target }} --package figma_import --bin dcf_info --features="dcf_info"

      - name: Package binaries
        shell: bash
        run: |
          TARGET=${{ matrix.target }}
          ARTIFACT_DIR="figma-tools-${TARGET}"
          mkdir -p "${ARTIFACT_DIR}"
          if [[ "${TARGET}" == *"-windows-"* ]]; then
            cp "target/${TARGET}/release/fetch.exe" "${ARTIFACT_DIR}/"
            cp "target/${TARGET}/release/dcf_info.exe" "${ARTIFACT_DIR}/"
            zip -q -r "${ARTIFACT_DIR}.zip" "${ARTIFACT_DIR}"
            echo "ASSET_PATH=${ARTIFACT_DIR}.zip" >> "$GITHUB_ENV"
          else
            cp "target/${TARGET}/release/fetch" "${ARTIFACT_DIR}/"
            cp "target/${TARGET}/release/dcf_info" "${ARTIFACT_DIR}/"
            tar -czf "${ARTIFACT_DIR}.tar.gz" "${ARTIFACT_DIR}"
            echo "ASSET_PATH=${ARTIFACT_DIR}.tar.gz" >> "$GITHUB_ENV"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: figma-tools-${{ matrix.target }}
          path: ${{ env.ASSET_PATH }}

  upload-release:
    runs-on: ubuntu-latest
    needs:
      - build-figma-resources
      - build-maven-repo
      - build-rust-cli
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v3.5.2
        with:
          submodules: 'recursive'
      # Download all artifacts
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0

      - name: Zip releases
        run: |
          zip -q -r designcompose_m2repo-${{ github.ref_name }}.zip designcompose_m2repo/
          zip -q -r extended-layout-plugin-${{ github.ref_name }}.zip extended-layout-plugin/
          zip -q -r auto-content-preview-widget-${{ github.ref_name }}.zip auto-content-preview-widget/

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} \
          extended-layout-plugin-${{ github.ref_name }}.zip \
          auto-content-preview-widget-${{ github.ref_name }}.zip \
          designcompose_m2repo-${{ github.ref_name }}.zip \
          figma-tools-*/*
