// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package designcompose.definition;

import "definition/element/variable.proto";
import "definition/view/view.proto";

option java_multiple_files = true;
option java_package = "com.android.designcompose.definition";
option optimize_for = LITE_RUNTIME;

// A serialized Figma design document, containing views, images, component sets,
// version, ID, and variable map. It's used for storing and loading Figma
// designs in a DesignCompose project.
message DesignComposeDefinition {
  string last_modified = 1;
  // TODO: GH-1282 views should be a map of NodeQuery to View, but you can't use messages as keys
  // in a proto map. This will need to figured out.
  map<string, definition.view.View> views = 2;
  EncodedImageMap images = 3;
  string name = 4;
  map<string, string> component_sets = 5;
  string version = 6;
  string id = 7;
  definition.element.VariableMap variable_map = 8;
}


// EncodedImageMap contains a mapping from ImageKey to network bytes. It can
// create an ImageMap and is intended to be used when we want to use
// Figma-defined components but do not want to communicate with the Figma
// service.
message EncodedImageMap {map<string, EncodedImage> images = 1;}

// A raw image
message EncodedImage {
  bytes data = 1;
  string mime_type = 2;
}
