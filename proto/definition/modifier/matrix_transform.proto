// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package designcompose.definition.modifier;

option java_multiple_files = true;
option java_package = "com.android.designcompose.definition.modifier";
option optimize_for = LITE_RUNTIME;

// Represents a 3D affine transformation, which is a combination of
// translation, rotation, scaling, and shearing in 3D space. It's used to
// define the transform applied to a view or its children within a
// DesignCompose layout.
// Maps to euclid's Transform3D
message LayoutTransform {
  float m11 = 1;
  float m12 = 2;
  float m13 = 3;
  float m14 = 4;
  float m21 = 5;
  float m22 = 6;
  float m23 = 7;
  float m24 = 8;
  float m31 = 9;
  float m32 = 10;
  float m33 = 11;
  float m34 = 12;
  float m41 = 13;
  float m42 = 14;
  float m43 = 15;
  float m44 = 16;
}
// Represents a 2D affine transformation, which is a combination of translation,
// rotation, scaling, and shearing. It's used to define the transform applied to
// an image background or other visual elements.
// Maps to euclid's Transform2D
message AffineTransform {
  float m11 = 1;
  float m12 = 2;
  float m21 = 3;
  float m22 = 4;
  float m31 = 5;
  float m32 = 6;
}
